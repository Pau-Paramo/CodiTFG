#define BLYNK_TEMPLATE_ID "TMPL5a0RuV_TE"
#define BLYNK_TEMPLATE_NAME "AC"
#define BLYNK_AUTH_TOKEN "d88O0iG1sNHWyed0lRR0sXomXvvPD8lh"


#define BLYNK_PRINT Serial

#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>

char auth[] = BLYNK_AUTH_TOKEN;


char ssid[] = "WiFi Blynk";
char pass[] = "Pwblynk33";


const uint16_t kIrLed = 15; 
IRsend irsend(kIrLed);

uint16_t rawData[349] = {528, 17914,  2918, 9008,  444, 552,  418, 1566,  422, 550,  442, 574,  418, 572,  422, 574,  440, 554,  416, 576,  416, 578,  414, 1568,  444, 576,  416, 554,  440, 1544,  444, 572,  420, 574,  420, 1566,  444, 1518,  468, 1542,  446, 1542,  446, 1544,  418, 598,  394, 600,  392, 576,  440, 576,  420, 572,  422, 572,  420, 574,  418, 574,  420, 572,  446, 550,  442, 522,  472, 548,  446, 548,  422, 550,  466, 522,  448, 572,  420, 576,  438, 556,  442, 574,  420, 576,  416, 576,  416, 576,  394, 598,  394, 600,  416, 576,  420, 570,  446, 526,  444, 572,  444, 526,  442, 574,  416, 572,  422, 572,  420, 1570,  440, 1546,  442, 1546,  442, 1568,  446, 2996,  2940, 9034,  418, 1570,  418, 574,  420, 572,  446, 544,  448, 548,  418, 552,  466, 548,  448, 522,  444, 574,  444, 1548,  414, 576,  440, 554,  418, 1594,  390, 598,  418, 1570,  392, 1594,  420, 1566,  422, 1566,  444, 1542,  420, 1566,  420, 574,  420, 550,  442, 572,  422, 576,  440, 548,  444, 574,  396, 598,  420, 574,  418, 574,  418, 578,  418, 576,  416, 574,  418, 576,  418, 572,  420, 572,  422, 572,  420, 574,  420, 572,  444, 528,  442, 572,  420, 572,  448, 548,  446, 550,  416, 578,  416, 600,  440, 524,  440, 578,  418, 574,  416, 576,  418, 576,  416, 576,  440, 552,  420, 548,  466, 550,  420, 574,  418, 574,  446, 3022,  2938, 9010,  446, 1542,  442, 550,  442, 574,  394, 602,  392, 600,  394, 598,  418, 578,  440, 550,  418, 574,  420, 1568,  434, 558,  422, 572,  420, 1566,  444, 548,  446, 1540,  420, 1568,  444, 548,  442, 1556,  430, 1568,  418, 1570,  418, 1570,  416, 1546,  442, 1568,  444, 1518,  444, 1566,  420, 572,  422, 574,  418, 574,  444, 1544,  418, 1570,  440, 1570,  392, 598,  418, 550,  444, 574,  418, 578,  416, 574,  442, 548,  444, 1544,  444, 548,  420, 1546,  464, 1544,  444, 552,  418, 572,  444, 552,  414, 1572,  416, 600,  392, 602,  390, 600,  416, 574,  420, 576,  440, 550,  420, 576,  418, 1566,  420, 1546,  464, 1544,  418, 1572,  442};
uint16_t rawData_Off[349] = {534, 18624,  2894, 9032,  418, 574,  418, 1548,  440, 570,  422, 574,  420, 574,  418, 574,  420, 574,  442, 574,  394, 600,  394, 1572,  438, 576,  422, 574,  420, 1540,  444, 1544,  444, 574,  444, 1544,  420, 1542,  444, 1592,  392, 1570,  418, 1592,  418, 574,  416, 578,  416, 576,  416, 578,  438, 552,  418, 574,  420, 572,  444, 520,  448, 570,  450, 546,  422, 572,  444, 530,  436, 574,  446, 548,  418, 574,  418, 578,  440, 576,  394, 598,  418, 574,  394, 578,  414, 600,  418, 576,  442, 548,  418, 574,  420, 574,  446, 546,  420, 574,  444, 550,  442, 550,  444, 546,  448, 546,  422, 574,  444, 552,  414, 580,  414, 1594,  392, 1594,  446, 3018,  2942, 9008,  416, 1572,  420, 572,  442, 554,  418, 572,  420, 552,  462, 554,  442, 550,  418, 574,  418, 574,  446, 1542,  442, 552,  442, 576,  392, 1592,  420, 576,  418, 1544,  440, 1548,  440, 1568,  420, 1566,  422, 1566,  446, 1540,  418, 576,  418, 602,  416, 552,  416, 578,  464, 490,  478, 554,  416, 602,  390, 600,  422, 572,  416, 576,  416, 578,  444, 548,  420, 574,  420, 574,  420, 566,  448, 536,  460, 552,  418, 548,  444, 574,  418, 572,  444, 554,  440, 550,  438, 552,  420, 600,  390, 602,  392, 602,  416, 602,  392, 574,  418, 552,  448, 572,  416, 574,  418, 574,  444, 548,  420, 574,  418, 570,  448, 552,  416, 3072,  2892, 9034,  444, 1570,  394, 576,  438, 578,  390, 602,  416, 576,  394, 600,  416, 580,  414, 552,  466, 552,  420, 1568,  442, 550,  422, 570,  444, 1544,  420, 1568,  446, 1542,  440, 1570,  416, 554,  442, 1570,  414, 1572,  414, 1570,  420, 1570,  420, 1568,  442, 1542,  444, 1544,  444, 1542,  448, 544,  420, 574,  418, 578,  418, 1592,  418, 1568,  418, 1568,  394, 598,  418, 576,  420, 574,  420, 572,  420, 574,  446, 546,  444, 1542,  444, 548,  444, 1542,  444, 1544,  442, 536,  458, 576,  394, 596,  394, 1596,  416, 578,  418, 572,  418, 576,  416, 574,  444, 550,  418, 576,  444, 550,  416, 574,  418, 576,  418, 1568,  418, 1568,  418};


bool Button_on;
bool Button_off;


BLYNK_CONNECTED(){
  Blynk.syncAll();
}

BLYNK_WRITE(V1){ //Obtenir valor del bot贸
  if(param.asInt() == 1)
    Button_on = true;
  else
    Button_on = false;
}

BLYNK_WRITE(V2){ //Obtenir valor del bot贸
  if(param.asInt() == 1)
    Button_off = true;
  else
    Button_off = false;
}


void setup(){
  Blynk.begin(auth, ssid, pass);
  irsend.begin();  // Inicialitzaci贸 del transmissor IR
}
void loop(){
  Blynk.run();
  splitsys(); //funci贸 de control del sistema dividit
}
void splitsys(){
  {
  if(Button_on== true){
      irsend.sendRaw(rawData, 349, 40);
      delay(500);
    }
    if(Button_off == true){
      irsend.sendRaw(rawData_Off, 349, 40);
    }
  }
}
